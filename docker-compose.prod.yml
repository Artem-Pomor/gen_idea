services:
    frontend:
        build:
            context: .
            dockerfile: docker/Dockerfile.frontend
        environment:
            NODE_ENV: production

    backend:
        build:
            context: .
            dockerfile: docker/Dockerfile.backend
        environment:
            - NODE_ENV=production
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=dreamscape
        depends_on:
            db:
                condition: service_healthy

    db:
        image: postgres:14
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: dreamscape
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 5s
            timeout: 3s
            retries: 5
        volumes:
            - pgdata:/var/lib/postgresql/data

    nginx:
        image: nginx:stable
        restart: always
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - frontend
            - backend

volumes:
    pgdata:
